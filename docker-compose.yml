version: '3'

services:

  ap-adminservice-dev:
    build: adminservice
    image: sockyjam/apollo.adminservice.dev:v01
    container_name: apollo.adminservice.dev
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloConfigDBDev?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
    volumes:
            - ./admindev_logs:/opt/logs
    ports:
      - "8091:8090"
    depends_on:
      - ap-mysql


  ap-adminservice-test:
    build: adminservice
    image: sockyjam/apollo.adminservice.test:v01
    container_name: apollo.adminservice.test 
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloConfigDBTest?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
    volumes:
            - ./admintest_logs:/opt/logs
    ports:
      - "8092:8090"
    depends_on:
      - ap-mysql


  ap-adminservice-pro:
    build: adminservice
    image: sockyjam/apollo.adminservice.pro:v01
    container_name: apollo.adminservice.pro 
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloConfigDBPro?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
    volumes:
            - ./adminpro_logs:/opt/logs
    ports:
            - "8093:8090"
    depends_on:
      - ap-mysql


  ap-configservice-dev:
    build: configservice
    image: sockyjam/apollo.configservice.dev:v01
    container_name: apollo.configservice.dev
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloConfigDBDev?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
    volumes:
            - ./configdev_logs:/opt/logs
    ports:
            - "8081:8080"
    expose:
            - "8081"
    depends_on:
      - ap-mysql

  ap-configservice-test:
    build: configservice
    image: sockyjam/apollo.configservice.test:v01
    container_name: apollo.configservice.test
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloConfigDBTest?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
    volumes:
            - ./configtest_logs:/opt/logs
    ports:
            - "8082:8080"
    expose:
            - "8082"
    depends_on:
      - ap-mysql


  ap-configservice-pro:
    build: configservice
    image: sockyjam/apollo.configservice.pro:v01
    container_name: apollo.configservice.pro
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloConfigDBPro?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
    volumes:
            - ./configpro_logs:/opt/logs
    ports:
            - "8083:8080"
    expose:
            - "8083"
    depends_on:
      - ap-mysql


  ap-portal:
    build: portal
    image: sockyjam/apollo.portal
    container_name: apollo.portal
    environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://ap-mysql:3306/ApolloPortalDB?characterEncoding=utf8
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: jfdaslghlklsfak78421k
            APOLLO_PORTAL_ENVS: dev, test, pro
            DEV_META: http://ap-configservice-dev:8080
            TEST_META: http://ap-configservice-test:8080
            PRO_META: http://ap-configservice-pro:8080
    volumes:
            - ./portal_logs:/opt/logs
    ports:
            - "8070:8070"       
    depends_on:
      - ap-mysql

   

  ap-mysql:
    build: mysql
    image: sockyjam/apollo.mysql:v01
    container_name: apollo.mysql
    environment:
        MYSQL_ROOT_PASSWORD: "jfdaslghlklsfak78421k"
    volumes:
        - ./dbdata:/var/lib/mysql
    ports:
        - "3307:3306"
    expose:
        - "3306"
        - "3307"
    command:
        --character-set-server=utf8
        --collation-server=utf8_general_ci

